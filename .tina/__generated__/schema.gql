# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

type SystemInfo {
  filename: String!
  basename: String!
  breadcrumbs(excludeExtension: Boolean): [String!]!
  path: String!
  relativePath: String!
  extension: String!
  template: String!
  collection: Collection!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String!
  endCursor: String!
}

""""""
interface Node {
  id: ID!
}

""""""
interface Document {
  sys: SystemInfo
  id: ID!
  form: JSON!
  values: JSON!
}

"""A relay-compliant pagination connection"""
interface Connection {
  totalCount: Int!
}

type Query {
  getCollection(collection: String): Collection!
  getCollections: [Collection!]!
  node(id: String): Node!
  getDocument(collection: String, relativePath: String): DocumentNode!
  getDocumentList(before: String, after: String, first: Int, last: Int): DocumentConnection!
  getDocumentFields: JSON!
  getNavbarDocument(relativePath: String): NavbarDocument!
  getNavbarList(before: String, after: String, first: Int, last: Int): NavbarConnection!
  getHomePageContentDocument(relativePath: String): HomePageContentDocument!
  getHomePageContentList(before: String, after: String, first: Int, last: Int): HomePageContentConnection!
  getFooterDocument(relativePath: String): FooterDocument!
  getFooterList(before: String, after: String, first: Int, last: Int): FooterConnection!
}

type DocumentConnectionEdges {
  cursor: String
  node: DocumentNode
}

type DocumentConnection implements Connection {
  pageInfo: PageInfo
  totalCount: Int!
  edges: [DocumentConnectionEdges]
}

type Collection {
  name: String!
  slug: String!
  label: String!
  path: String!
  format: String
  matches: String
  templates: [JSON]
  fields: [JSON]
  documents(before: String, after: String, first: Int, last: Int): DocumentConnection!
}

union DocumentNode = NavbarDocument | HomePageContentDocument | FooterDocument

type NavbarNavbarLinks {
  label: String
  url: String
}

type Navbar {
  navbarLinks: [NavbarNavbarLinks]
}

type NavbarDocument implements Node & Document {
  id: ID!
  sys: SystemInfo!
  data: Navbar!
  form: JSON!
  values: JSON!
  dataJSON: JSON!
}

type NavbarConnectionEdges {
  cursor: String
  node: NavbarDocument
}

type NavbarConnection implements Connection {
  pageInfo: PageInfo
  totalCount: Int!
  edges: [NavbarConnectionEdges]
}

type HomePageContentSectionsCarouselButton {
  text: String
  url: String
}

type HomePageContentSectionsCarousel {
  images: [String]
  mainText: String
  description: String
  button: HomePageContentSectionsCarouselButton
  delay: Int
}

type HomePageContentSectionsGuaranteesBadges {
  icon: String
  text: String
}

type HomePageContentSectionsGuarantees {
  badges: [HomePageContentSectionsGuaranteesBadges]
}

type HomePageContentSectionsCollectionList {
  collection: String
  numImages: Int
  numColumns: Int
  numRows: Int
}

type HomePageContentSectionsCollectionListDisplay {
  titleText: String
  collections: [String]
}

type HomePageContentSectionsSocialMediaIntegration {
  socialMedia: String
  numImages: Int
  numColumns: Int
  numRows: Int
}

union HomePageContentSections = HomePageContentSectionsCarousel | HomePageContentSectionsGuarantees | HomePageContentSectionsCollectionList | HomePageContentSectionsCollectionListDisplay | HomePageContentSectionsSocialMediaIntegration

type HomePageContent {
  sections: [HomePageContentSections]
}

type HomePageContentDocument implements Node & Document {
  id: ID!
  sys: SystemInfo!
  data: HomePageContent!
  form: JSON!
  values: JSON!
  dataJSON: JSON!
}

type HomePageContentConnectionEdges {
  cursor: String
  node: HomePageContentDocument
}

type HomePageContentConnection implements Connection {
  pageInfo: PageInfo
  totalCount: Int!
  edges: [HomePageContentConnectionEdges]
}

type FooterNavSectionsLinks {
  label: String
  url: String
}

type FooterNavSections {
  links: [FooterNavSectionsLinks]
  title: String
}

type Footer {
  navSections: [FooterNavSections]
}

type FooterDocument implements Node & Document {
  id: ID!
  sys: SystemInfo!
  data: Footer!
  form: JSON!
  values: JSON!
  dataJSON: JSON!
}

type FooterConnectionEdges {
  cursor: String
  node: FooterDocument
}

type FooterConnection implements Connection {
  pageInfo: PageInfo
  totalCount: Int!
  edges: [FooterConnectionEdges]
}

type Mutation {
  addPendingDocument(collection: String!, relativePath: String!, template: String): DocumentNode!
  updateDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  createDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  updateNavbarDocument(relativePath: String!, params: NavbarMutation!): NavbarDocument!
  createNavbarDocument(relativePath: String!, params: NavbarMutation!): NavbarDocument!
  updateHomePageContentDocument(relativePath: String!, params: HomePageContentMutation!): HomePageContentDocument!
  createHomePageContentDocument(relativePath: String!, params: HomePageContentMutation!): HomePageContentDocument!
  updateFooterDocument(relativePath: String!, params: FooterMutation!): FooterDocument!
  createFooterDocument(relativePath: String!, params: FooterMutation!): FooterDocument!
}

input DocumentMutation {
  navbar: NavbarMutation
  homePageContent: HomePageContentMutation
  footer: FooterMutation
}

input NavbarNavbarLinksMutation {
  label: String
  url: String
}

input NavbarMutation {
  navbarLinks: [NavbarNavbarLinksMutation]
}

input HomePageContentSectionsCarouselButtonMutation {
  text: String
  url: String
}

input HomePageContentSectionsCarouselMutation {
  images: [String]
  mainText: String
  description: String
  button: HomePageContentSectionsCarouselButtonMutation
  delay: Int
}

input HomePageContentSectionsGuaranteesBadgesMutation {
  icon: String
  text: String
}

input HomePageContentSectionsGuaranteesMutation {
  badges: [HomePageContentSectionsGuaranteesBadgesMutation]
}

input HomePageContentSectionsCollectionListMutation {
  collection: String
  numImages: Int
  numColumns: Int
  numRows: Int
}

input HomePageContentSectionsCollectionListDisplayMutation {
  titleText: String
  collections: [String]
}

input HomePageContentSectionsSocialMediaIntegrationMutation {
  socialMedia: String
  numImages: Int
  numColumns: Int
  numRows: Int
}

input HomePageContentSectionsMutation {
  carousel: HomePageContentSectionsCarouselMutation
  guarantees: HomePageContentSectionsGuaranteesMutation
  collectionList: HomePageContentSectionsCollectionListMutation
  collectionListDisplay: HomePageContentSectionsCollectionListDisplayMutation
  socialMediaIntegration: HomePageContentSectionsSocialMediaIntegrationMutation
}

input HomePageContentMutation {
  sections: [HomePageContentSectionsMutation]
}

input FooterNavSectionsLinksMutation {
  label: String
  url: String
}

input FooterNavSectionsMutation {
  links: [FooterNavSectionsLinksMutation]
  title: String
}

input FooterMutation {
  navSections: [FooterNavSectionsMutation]
}

schema {
  query: Query
  mutation: Mutation
}
  